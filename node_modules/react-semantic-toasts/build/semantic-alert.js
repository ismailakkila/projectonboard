'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _propTypes = require('prop-types');var _propTypes2 = _interopRequireDefault(_propTypes);
var _semanticUiReact = require('semantic-ui-react');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}

var icons = {
    info: 'announcement',
    success: 'checkmark',
    error: 'remove',
    warning: 'warning circle' };var


SemanticAlert = function (_Component) {_inherits(SemanticAlert, _Component);function SemanticAlert() {var _ref;var _temp, _this, _ret;_classCallCheck(this, SemanticAlert);for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SemanticAlert.__proto__ || Object.getPrototypeOf(SemanticAlert)).call.apply(_ref, [this].concat(args))), _this), _this.
























        state = {
            visible: false }, _this.






        toggleVisibility = function () {return _this.setState({ visible: !_this.state.visible });}, _temp), _possibleConstructorReturn(_this, _ret);}_createClass(SemanticAlert, [{ key: 'componentDidMount', value: function componentDidMount() {setTimeout(this.toggleVisibility, 5000);} }, { key: 'render', value: function render()

        {var _props =
            this.props,position = _props.position,type = _props.type,title = _props.title,description = _props.description,time = _props.time;
            var icon = this.props.icon || icons[this.props.type];
            var alert = ['ui', 'icon', 'floating'];

            if (window.innerWidth < 425) {
                alert.push('mini');
            }

            return (
                _react2.default.createElement('div', { className: 'ui-alerts ' + position },
                    _react2.default.createElement('div', null,
                        _react2.default.createElement(_semanticUiReact.Message, {
                            info: type === 'info',
                            success: type === 'success',
                            error: type === 'error',
                            warning: type === 'warning',
                            header: title,
                            content: description,
                            icon: icon,
                            floating: true }))));




        } }]);return SemanticAlert;}(_react.Component);SemanticAlert.propTypes = { type: _propTypes2.default.oneOf(['info', 'success', 'error', 'warning']), title: _propTypes2.default.string, description: _propTypes2.default.string, time: _propTypes2.default.number, position: _propTypes2.default.oneOf(['top-right', 'top-center', 'bottom-right', 'bottom-center', 'bottom-left']), icon: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.string]) };SemanticAlert.defaultProps = { type: 'info', title: '', description: '', time: 500, position: 'top-right', icon: false };exports.default =


SemanticAlert;